//                     Syntax: motor (3 or 4), speed (0 to 255), duration (milliseconds), direction (1 for forwards, -1 for backwards)

//stolen code from example begins here

#include <Wire.h>
//#include <Adafruit_MotorShield.h>
#include "utility/Adafruit_PWMServoDriver.h"

// Create the motor shield object with the default I2C address
Adafruit_MotorShield AFMS = Adafruit_MotorShield(); 
// Or, create it with a different I2C address (say for stacking)
// Adafruit_MotorShield AFMS = Adafruit_MotorShield(0x61); 


void setup() {
  Serial.begin(9600);           // set up Serial library at 9600 bps
  Serial.println("initialized");

  AFMS.begin();  // create with the default frequency 1.6KHz
  //AFMS.begin(1000);  // OR with a different frequency, say 1KHz
  Serial.println("Syntax: motor (3 or 4), speed (0 to 255), duration (milliseconds), direction (1 for forwards, -1 for backwards)");
}

//original coding begins, look here for errors

void loop() {
  while (Serial.available() > 0) {
    // declaration of variables 
    int motorselection = Serial.parseInt(); //only pick 3 or 4
    int motorspeed = Serial.parseInt(); //150 is slow but bearable speed, good for initial work
    int duration = Serial.parseInt(); //in ms
    int rotationaldirection = Serial.parseInt(); //1 for forward, -1 for reverse
    
    Adafruit_DCMotor *myMotor = AFMS.getMotor(motorselection);
    
    Serial.println("turning");

      myMotor->setSpeed(motorspeed);
      if (rotationaldirection == 1)
      {
        myMotor->run(FORWARD);
      }
      if (rotationaldirection == -1)
      {
        myMotor->run(BACKWARD);
      }
      delay(duration);
      myMotor->run(RELEASE);
      Serial.println("done");
      Serial.println("Syntax: motor (3 or 4), speed (0 to 255), duration (milliseconds), direction (1 for forwards, -1 for backwards)");

  }
}

